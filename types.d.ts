/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  BlogPageFiltersInput: { // input type
    ExcludedTags?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
    Slug?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['BlogPageFiltersInput'] | null> | null; // [BlogPageFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    not?: NexusGenInputs['BlogPageFiltersInput'] | null; // BlogPageFiltersInput
    or?: Array<NexusGenInputs['BlogPageFiltersInput'] | null> | null; // [BlogPageFiltersInput]
    publishedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  BlogPageInput: { // input type
    ExcludedTags?: Array<string | null> | null; // [ID]
    PageInfo?: NexusGenInputs['ComponentLayoutPageInfoInput'] | null; // ComponentLayoutPageInfoInput
    Slug?: string | null; // String
    Title?: string | null; // String
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  BooleanFilterInput: { // input type
    and?: Array<boolean | null> | null; // [Boolean]
    between?: Array<boolean | null> | null; // [Boolean]
    contains?: boolean | null; // Boolean
    containsi?: boolean | null; // Boolean
    endsWith?: boolean | null; // Boolean
    eq?: boolean | null; // Boolean
    gt?: boolean | null; // Boolean
    gte?: boolean | null; // Boolean
    in?: Array<boolean | null> | null; // [Boolean]
    lt?: boolean | null; // Boolean
    lte?: boolean | null; // Boolean
    ne?: boolean | null; // Boolean
    not?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    notContains?: boolean | null; // Boolean
    notContainsi?: boolean | null; // Boolean
    notIn?: Array<boolean | null> | null; // [Boolean]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<boolean | null> | null; // [Boolean]
    startsWith?: boolean | null; // Boolean
  }
  CompanyInfoFiltersInput: { // input type
    Email?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['CompanyInfoFiltersInput'] | null> | null; // [CompanyInfoFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    not?: NexusGenInputs['CompanyInfoFiltersInput'] | null; // CompanyInfoFiltersInput
    or?: Array<NexusGenInputs['CompanyInfoFiltersInput'] | null> | null; // [CompanyInfoFiltersInput]
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  CompanyInfoInput: { // input type
    Email?: string | null; // String
    Logo?: string | null; // ID
    Name?: string | null; // String
  }
  ComponentBlogFeaturedPostFiltersInput: { // input type
    FeaturedPostHeading?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Post?: NexusGenInputs['PostFiltersInput'] | null; // PostFiltersInput
    and?: Array<NexusGenInputs['ComponentBlogFeaturedPostFiltersInput'] | null> | null; // [ComponentBlogFeaturedPostFiltersInput]
    not?: NexusGenInputs['ComponentBlogFeaturedPostFiltersInput'] | null; // ComponentBlogFeaturedPostFiltersInput
    or?: Array<NexusGenInputs['ComponentBlogFeaturedPostFiltersInput'] | null> | null; // [ComponentBlogFeaturedPostFiltersInput]
  }
  ComponentBlogFeaturedPostInput: { // input type
    FeaturedPostHeading?: string | null; // String
    Post?: string | null; // ID
    id?: string | null; // ID
  }
  ComponentBlogPostSelectionFiltersInput: { // input type
    SelectionHeading?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Tags?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
    and?: Array<NexusGenInputs['ComponentBlogPostSelectionFiltersInput'] | null> | null; // [ComponentBlogPostSelectionFiltersInput]
    not?: NexusGenInputs['ComponentBlogPostSelectionFiltersInput'] | null; // ComponentBlogPostSelectionFiltersInput
    or?: Array<NexusGenInputs['ComponentBlogPostSelectionFiltersInput'] | null> | null; // [ComponentBlogPostSelectionFiltersInput]
  }
  ComponentBlogPostSelectionInput: { // input type
    SelectionHeading?: string | null; // String
    Tags?: Array<string | null> | null; // [ID]
    id?: string | null; // ID
  }
  ComponentLayoutButtonFiltersInput: { // input type
    Label?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Link?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['ComponentLayoutButtonFiltersInput'] | null> | null; // [ComponentLayoutButtonFiltersInput]
    not?: NexusGenInputs['ComponentLayoutButtonFiltersInput'] | null; // ComponentLayoutButtonFiltersInput
    or?: Array<NexusGenInputs['ComponentLayoutButtonFiltersInput'] | null> | null; // [ComponentLayoutButtonFiltersInput]
  }
  ComponentLayoutButtonInput: { // input type
    Label?: string | null; // String
    Link?: string | null; // String
    id?: string | null; // ID
  }
  ComponentLayoutFooterColumnFiltersInput: { // input type
    Content?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    FooterLinks?: NexusGenInputs['MenuFiltersInput'] | null; // MenuFiltersInput
    Heading?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['ComponentLayoutFooterColumnFiltersInput'] | null> | null; // [ComponentLayoutFooterColumnFiltersInput]
    not?: NexusGenInputs['ComponentLayoutFooterColumnFiltersInput'] | null; // ComponentLayoutFooterColumnFiltersInput
    or?: Array<NexusGenInputs['ComponentLayoutFooterColumnFiltersInput'] | null> | null; // [ComponentLayoutFooterColumnFiltersInput]
  }
  ComponentLayoutFooterColumnInput: { // input type
    Content?: string | null; // String
    FooterLinks?: string | null; // ID
    Heading?: string | null; // String
    id?: string | null; // ID
  }
  ComponentLayoutHeroSectionFiltersInput: { // input type
    CallToAction?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['ComponentLayoutHeroSectionFiltersInput'] | null> | null; // [ComponentLayoutHeroSectionFiltersInput]
    not?: NexusGenInputs['ComponentLayoutHeroSectionFiltersInput'] | null; // ComponentLayoutHeroSectionFiltersInput
    or?: Array<NexusGenInputs['ComponentLayoutHeroSectionFiltersInput'] | null> | null; // [ComponentLayoutHeroSectionFiltersInput]
  }
  ComponentLayoutHeroSectionInput: { // input type
    Buttons?: Array<NexusGenInputs['ComponentLayoutButtonInput'] | null> | null; // [ComponentLayoutButtonInput]
    CallToAction?: string | null; // String
    Images?: Array<string | null> | null; // [ID]
    id?: string | null; // ID
  }
  ComponentLayoutPageInfoFiltersInput: { // input type
    Content?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['ComponentLayoutPageInfoFiltersInput'] | null> | null; // [ComponentLayoutPageInfoFiltersInput]
    not?: NexusGenInputs['ComponentLayoutPageInfoFiltersInput'] | null; // ComponentLayoutPageInfoFiltersInput
    or?: Array<NexusGenInputs['ComponentLayoutPageInfoFiltersInput'] | null> | null; // [ComponentLayoutPageInfoFiltersInput]
  }
  ComponentLayoutPageInfoInput: { // input type
    Content?: string | null; // String
    Cover?: string | null; // ID
    SeoInformation?: NexusGenInputs['ComponentSeoSeoInformationInput'] | null; // ComponentSeoSeoInformationInput
    id?: string | null; // ID
  }
  ComponentSeoSeoInformationFiltersInput: { // input type
    SeoDescription?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    SeoTitle?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['ComponentSeoSeoInformationFiltersInput'] | null> | null; // [ComponentSeoSeoInformationFiltersInput]
    not?: NexusGenInputs['ComponentSeoSeoInformationFiltersInput'] | null; // ComponentSeoSeoInformationFiltersInput
    or?: Array<NexusGenInputs['ComponentSeoSeoInformationFiltersInput'] | null> | null; // [ComponentSeoSeoInformationFiltersInput]
  }
  ComponentSeoSeoInformationInput: { // input type
    SeoDescription?: string | null; // String
    SeoTitle?: string | null; // String
    id?: string | null; // ID
  }
  ComponentServicesServicesPreviewFiltersInput: { // input type
    Services?: NexusGenInputs['ServiceFiltersInput'] | null; // ServiceFiltersInput
    and?: Array<NexusGenInputs['ComponentServicesServicesPreviewFiltersInput'] | null> | null; // [ComponentServicesServicesPreviewFiltersInput]
    not?: NexusGenInputs['ComponentServicesServicesPreviewFiltersInput'] | null; // ComponentServicesServicesPreviewFiltersInput
    or?: Array<NexusGenInputs['ComponentServicesServicesPreviewFiltersInput'] | null> | null; // [ComponentServicesServicesPreviewFiltersInput]
  }
  ComponentServicesServicesPreviewInput: { // input type
    Services?: Array<string | null> | null; // [ID]
    id?: string | null; // ID
  }
  ContentPageFiltersInput: { // input type
    Slug?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['ContentPageFiltersInput'] | null> | null; // [ContentPageFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['ContentPageFiltersInput'] | null; // ContentPageFiltersInput
    or?: Array<NexusGenInputs['ContentPageFiltersInput'] | null> | null; // [ContentPageFiltersInput]
    publishedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  ContentPageInput: { // input type
    PageInfo?: NexusGenInputs['ComponentLayoutPageInfoInput'] | null; // ComponentLayoutPageInfoInput
    Slug?: string | null; // String
    Title?: string | null; // String
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  DateFilterInput: { // input type
    and?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    between?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    contains?: NexusGenScalars['Date'] | null; // Date
    containsi?: NexusGenScalars['Date'] | null; // Date
    endsWith?: NexusGenScalars['Date'] | null; // Date
    eq?: NexusGenScalars['Date'] | null; // Date
    gt?: NexusGenScalars['Date'] | null; // Date
    gte?: NexusGenScalars['Date'] | null; // Date
    in?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    lt?: NexusGenScalars['Date'] | null; // Date
    lte?: NexusGenScalars['Date'] | null; // Date
    ne?: NexusGenScalars['Date'] | null; // Date
    not?: NexusGenInputs['DateFilterInput'] | null; // DateFilterInput
    notContains?: NexusGenScalars['Date'] | null; // Date
    notContainsi?: NexusGenScalars['Date'] | null; // Date
    notIn?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    startsWith?: NexusGenScalars['Date'] | null; // Date
  }
  DateTimeFilterInput: { // input type
    and?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    between?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    contains?: NexusGenScalars['DateTime'] | null; // DateTime
    containsi?: NexusGenScalars['DateTime'] | null; // DateTime
    endsWith?: NexusGenScalars['DateTime'] | null; // DateTime
    eq?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    ne?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    notContains?: NexusGenScalars['DateTime'] | null; // DateTime
    notContainsi?: NexusGenScalars['DateTime'] | null; // DateTime
    notIn?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    startsWith?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  FileInfoInput: { // input type
    alternativeText?: string | null; // String
    caption?: string | null; // String
    name?: string | null; // String
  }
  FloatFilterInput: { // input type
    and?: Array<number | null> | null; // [Float]
    between?: Array<number | null> | null; // [Float]
    contains?: number | null; // Float
    containsi?: number | null; // Float
    endsWith?: number | null; // Float
    eq?: number | null; // Float
    gt?: number | null; // Float
    gte?: number | null; // Float
    in?: Array<number | null> | null; // [Float]
    lt?: number | null; // Float
    lte?: number | null; // Float
    ne?: number | null; // Float
    not?: NexusGenInputs['FloatFilterInput'] | null; // FloatFilterInput
    notContains?: number | null; // Float
    notContainsi?: number | null; // Float
    notIn?: Array<number | null> | null; // [Float]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<number | null> | null; // [Float]
    startsWith?: number | null; // Float
  }
  FooterFiltersInput: { // input type
    and?: Array<NexusGenInputs['FooterFiltersInput'] | null> | null; // [FooterFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    not?: NexusGenInputs['FooterFiltersInput'] | null; // FooterFiltersInput
    or?: Array<NexusGenInputs['FooterFiltersInput'] | null> | null; // [FooterFiltersInput]
    publishedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  FooterInput: { // input type
    FooterColumn?: Array<NexusGenInputs['ComponentLayoutFooterColumnInput'] | null> | null; // [ComponentLayoutFooterColumnInput]
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  HomePageFiltersInput: { // input type
    Title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['HomePageFiltersInput'] | null> | null; // [HomePageFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    not?: NexusGenInputs['HomePageFiltersInput'] | null; // HomePageFiltersInput
    or?: Array<NexusGenInputs['HomePageFiltersInput'] | null> | null; // [HomePageFiltersInput]
    publishedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  HomePageInput: { // input type
    BlogSelection?: NexusGenScalars['HomePageBlogSelectionDynamicZoneInput'][] | null; // [HomePageBlogSelectionDynamicZoneInput!]
    HomeHero?: NexusGenInputs['ComponentLayoutHeroSectionInput'] | null; // ComponentLayoutHeroSectionInput
    SeoInformation?: NexusGenInputs['ComponentSeoSeoInformationInput'] | null; // ComponentSeoSeoInformationInput
    ServicesPreview?: NexusGenInputs['ComponentServicesServicesPreviewInput'] | null; // ComponentServicesServicesPreviewInput
    Title?: string | null; // String
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  I18NLocaleFiltersInput: { // input type
    and?: Array<NexusGenInputs['I18NLocaleFiltersInput'] | null> | null; // [I18NLocaleFiltersInput]
    code?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['I18NLocaleFiltersInput'] | null; // I18NLocaleFiltersInput
    or?: Array<NexusGenInputs['I18NLocaleFiltersInput'] | null> | null; // [I18NLocaleFiltersInput]
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  I18NLocaleInput: { // input type
    code?: string | null; // String
    name?: string | null; // String
  }
  IDFilterInput: { // input type
    and?: Array<string | null> | null; // [ID]
    between?: Array<string | null> | null; // [ID]
    contains?: string | null; // ID
    containsi?: string | null; // ID
    endsWith?: string | null; // ID
    eq?: string | null; // ID
    gt?: string | null; // ID
    gte?: string | null; // ID
    in?: Array<string | null> | null; // [ID]
    lt?: string | null; // ID
    lte?: string | null; // ID
    ne?: string | null; // ID
    not?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    notContains?: string | null; // ID
    notContainsi?: string | null; // ID
    notIn?: Array<string | null> | null; // [ID]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<string | null> | null; // [ID]
    startsWith?: string | null; // ID
  }
  IntFilterInput: { // input type
    and?: Array<number | null> | null; // [Int]
    between?: Array<number | null> | null; // [Int]
    contains?: number | null; // Int
    containsi?: number | null; // Int
    endsWith?: number | null; // Int
    eq?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: Array<number | null> | null; // [Int]
    lt?: number | null; // Int
    lte?: number | null; // Int
    ne?: number | null; // Int
    not?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    notContains?: number | null; // Int
    notContainsi?: number | null; // Int
    notIn?: Array<number | null> | null; // [Int]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<number | null> | null; // [Int]
    startsWith?: number | null; // Int
  }
  JSONFilterInput: { // input type
    and?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    between?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    contains?: NexusGenScalars['JSON'] | null; // JSON
    containsi?: NexusGenScalars['JSON'] | null; // JSON
    endsWith?: NexusGenScalars['JSON'] | null; // JSON
    eq?: NexusGenScalars['JSON'] | null; // JSON
    gt?: NexusGenScalars['JSON'] | null; // JSON
    gte?: NexusGenScalars['JSON'] | null; // JSON
    in?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    lt?: NexusGenScalars['JSON'] | null; // JSON
    lte?: NexusGenScalars['JSON'] | null; // JSON
    ne?: NexusGenScalars['JSON'] | null; // JSON
    not?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    notContains?: NexusGenScalars['JSON'] | null; // JSON
    notContainsi?: NexusGenScalars['JSON'] | null; // JSON
    notIn?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    startsWith?: NexusGenScalars['JSON'] | null; // JSON
  }
  LongFilterInput: { // input type
    and?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    between?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    contains?: NexusGenScalars['Long'] | null; // Long
    containsi?: NexusGenScalars['Long'] | null; // Long
    endsWith?: NexusGenScalars['Long'] | null; // Long
    eq?: NexusGenScalars['Long'] | null; // Long
    gt?: NexusGenScalars['Long'] | null; // Long
    gte?: NexusGenScalars['Long'] | null; // Long
    in?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    lt?: NexusGenScalars['Long'] | null; // Long
    lte?: NexusGenScalars['Long'] | null; // Long
    ne?: NexusGenScalars['Long'] | null; // Long
    not?: NexusGenInputs['LongFilterInput'] | null; // LongFilterInput
    notContains?: NexusGenScalars['Long'] | null; // Long
    notContainsi?: NexusGenScalars['Long'] | null; // Long
    notIn?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    startsWith?: NexusGenScalars['Long'] | null; // Long
  }
  MenuFiltersInput: { // input type
    CodeName?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['MenuFiltersInput'] | null> | null; // [MenuFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['MenuFiltersInput'] | null; // MenuFiltersInput
    or?: Array<NexusGenInputs['MenuFiltersInput'] | null> | null; // [MenuFiltersInput]
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  MenuInput: { // input type
    CodeName?: string | null; // String
    Links?: Array<NexusGenInputs['ComponentLayoutButtonInput'] | null> | null; // [ComponentLayoutButtonInput]
    Name?: string | null; // String
  }
  PaginationArg: { // input type
    limit?: number | null; // Int
    page?: number | null; // Int
    pageSize?: number | null; // Int
    start?: number | null; // Int
  }
  PostFiltersInput: { // input type
    Content?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Slug?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['PostFiltersInput'] | null> | null; // [PostFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['PostFiltersInput'] | null; // PostFiltersInput
    or?: Array<NexusGenInputs['PostFiltersInput'] | null> | null; // [PostFiltersInput]
    publishedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    tags?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  PostInput: { // input type
    Content?: string | null; // String
    Cover?: string | null; // ID
    PostSEO?: NexusGenInputs['ComponentSeoSeoInformationInput'] | null; // ComponentSeoSeoInformationInput
    Slug?: string | null; // String
    Title?: string | null; // String
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    tags?: Array<string | null> | null; // [ID]
  }
  SeoConfigurationFiltersInput: { // input type
    DefaultDescription?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    DefaultTitle?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['SeoConfigurationFiltersInput'] | null> | null; // [SeoConfigurationFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    not?: NexusGenInputs['SeoConfigurationFiltersInput'] | null; // SeoConfigurationFiltersInput
    or?: Array<NexusGenInputs['SeoConfigurationFiltersInput'] | null> | null; // [SeoConfigurationFiltersInput]
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  SeoConfigurationInput: { // input type
    DefaultDescription?: string | null; // String
    DefaultSeoImage?: string | null; // ID
    DefaultTitle?: string | null; // String
  }
  ServiceFiltersInput: { // input type
    Description?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Preview?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Slug?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['ServiceFiltersInput'] | null> | null; // [ServiceFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['ServiceFiltersInput'] | null; // ServiceFiltersInput
    or?: Array<NexusGenInputs['ServiceFiltersInput'] | null> | null; // [ServiceFiltersInput]
    publishedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  ServiceInput: { // input type
    Description?: string | null; // String
    Image?: string | null; // ID
    Name?: string | null; // String
    Preview?: string | null; // String
    Slug?: string | null; // String
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ServicesPageFiltersInput: { // input type
    ExcludedServices?: NexusGenInputs['ServiceFiltersInput'] | null; // ServiceFiltersInput
    Slug?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['ServicesPageFiltersInput'] | null> | null; // [ServicesPageFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    not?: NexusGenInputs['ServicesPageFiltersInput'] | null; // ServicesPageFiltersInput
    or?: Array<NexusGenInputs['ServicesPageFiltersInput'] | null> | null; // [ServicesPageFiltersInput]
    publishedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  ServicesPageInput: { // input type
    ExcludedServices?: Array<string | null> | null; // [ID]
    PageInfo?: NexusGenInputs['ComponentLayoutPageInfoInput'] | null; // ComponentLayoutPageInfoInput
    Slug?: string | null; // String
    Title?: string | null; // String
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  StringFilterInput: { // input type
    and?: Array<string | null> | null; // [String]
    between?: Array<string | null> | null; // [String]
    contains?: string | null; // String
    containsi?: string | null; // String
    endsWith?: string | null; // String
    eq?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: Array<string | null> | null; // [String]
    lt?: string | null; // String
    lte?: string | null; // String
    ne?: string | null; // String
    not?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    notContains?: string | null; // String
    notContainsi?: string | null; // String
    notIn?: Array<string | null> | null; // [String]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<string | null> | null; // [String]
    startsWith?: string | null; // String
  }
  TagFiltersInput: { // input type
    Name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    Slug?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['TagFiltersInput'] | null> | null; // [TagFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
    or?: Array<NexusGenInputs['TagFiltersInput'] | null> | null; // [TagFiltersInput]
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  TagInput: { // input type
    Name?: string | null; // String
    Slug?: string | null; // String
  }
  TimeFilterInput: { // input type
    and?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    between?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    contains?: NexusGenScalars['Time'] | null; // Time
    containsi?: NexusGenScalars['Time'] | null; // Time
    endsWith?: NexusGenScalars['Time'] | null; // Time
    eq?: NexusGenScalars['Time'] | null; // Time
    gt?: NexusGenScalars['Time'] | null; // Time
    gte?: NexusGenScalars['Time'] | null; // Time
    in?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    lt?: NexusGenScalars['Time'] | null; // Time
    lte?: NexusGenScalars['Time'] | null; // Time
    ne?: NexusGenScalars['Time'] | null; // Time
    not?: NexusGenInputs['TimeFilterInput'] | null; // TimeFilterInput
    notContains?: NexusGenScalars['Time'] | null; // Time
    notContainsi?: NexusGenScalars['Time'] | null; // Time
    notIn?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    startsWith?: NexusGenScalars['Time'] | null; // Time
  }
  UploadFileFiltersInput: { // input type
    alternativeText?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['UploadFileFiltersInput'] | null> | null; // [UploadFileFiltersInput]
    caption?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    ext?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    formats?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    hash?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    height?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    mime?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    or?: Array<NexusGenInputs['UploadFileFiltersInput'] | null> | null; // [UploadFileFiltersInput]
    previewUrl?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider_metadata?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    size?: NexusGenInputs['FloatFilterInput'] | null; // FloatFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    url?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    width?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
  }
  UploadFileInput: { // input type
    alternativeText?: string | null; // String
    caption?: string | null; // String
    ext?: string | null; // String
    formats?: NexusGenScalars['JSON'] | null; // JSON
    hash?: string | null; // String
    height?: number | null; // Int
    mime?: string | null; // String
    name?: string | null; // String
    previewUrl?: string | null; // String
    provider?: string | null; // String
    provider_metadata?: NexusGenScalars['JSON'] | null; // JSON
    size?: number | null; // Float
    url?: string | null; // String
    width?: number | null; // Int
  }
  UsersPermissionsLoginInput: { // input type
    identifier: string; // String!
    password: string; // String!
    provider: string; // String!
  }
  UsersPermissionsPermissionFiltersInput: { // input type
    action?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null> | null; // [UsersPermissionsPermissionFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
    or?: Array<NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null> | null; // [UsersPermissionsPermissionFiltersInput]
    role?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  UsersPermissionsPermissionInput: { // input type
    action?: string | null; // String
    role?: string | null; // ID
  }
  UsersPermissionsRegisterInput: { // input type
    email: string; // String!
    password: string; // String!
    username: string; // String!
  }
  UsersPermissionsRoleFiltersInput: { // input type
    and?: Array<NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null> | null; // [UsersPermissionsRoleFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    description?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    or?: Array<NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null> | null; // [UsersPermissionsRoleFiltersInput]
    permissions?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
    type?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    users?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
  }
  UsersPermissionsRoleInput: { // input type
    description?: string | null; // String
    name?: string | null; // String
    permissions?: Array<string | null> | null; // [ID]
    type?: string | null; // String
    users?: Array<string | null> | null; // [ID]
  }
  UsersPermissionsUserFiltersInput: { // input type
    and?: Array<NexusGenInputs['UsersPermissionsUserFiltersInput'] | null> | null; // [UsersPermissionsUserFiltersInput]
    blocked?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    confirmationToken?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    confirmed?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    email?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
    or?: Array<NexusGenInputs['UsersPermissionsUserFiltersInput'] | null> | null; // [UsersPermissionsUserFiltersInput]
    password?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    resetPasswordToken?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    role?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    username?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  UsersPermissionsUserInput: { // input type
    blocked?: boolean | null; // Boolean
    confirmationToken?: string | null; // String
    confirmed?: boolean | null; // Boolean
    email?: string | null; // String
    password?: string | null; // String
    provider?: string | null; // String
    resetPasswordToken?: string | null; // String
    role?: string | null; // ID
    username?: string | null; // String
  }
}

export interface NexusGenEnums {
  PublicationState: "live" | "preview"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Date: any
  DateTime: any
  HomePageBlogSelectionDynamicZoneInput: any
  I18NLocaleCode: any
  JSON: any
  JSONObject: any
  Long: any
  Time: any
  Upload: any
}

export interface NexusGenObjects {
  BlogPage: { // root type
    Slug?: string | null; // String
    Title: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  BlogPageEntity: {};
  BlogPageEntityResponse: {};
  BlogPageEntityResponseCollection: {};
  BlogPageRelationResponseCollection: {};
  CompanyInfo: { // root type
    Email: string; // String!
    Name: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  CompanyInfoEntity: {};
  CompanyInfoEntityResponse: {};
  CompanyInfoEntityResponseCollection: {};
  CompanyInfoRelationResponseCollection: {};
  ComponentBlogFeaturedPost: { // root type
    FeaturedPostHeading?: string | null; // String
    id: string; // ID!
  }
  ComponentBlogPostSelection: { // root type
    SelectionHeading?: string | null; // String
    id: string; // ID!
  }
  ComponentLayoutButton: { // root type
    Label: string; // String!
    Link: string; // String!
    id: string; // ID!
  }
  ComponentLayoutFooterColumn: { // root type
    Content?: string | null; // String
    Heading?: string | null; // String
    id: string; // ID!
  }
  ComponentLayoutHeroSection: { // root type
    CallToAction: string; // String!
    id: string; // ID!
  }
  ComponentLayoutPageInfo: { // root type
    Content?: string | null; // String
    id: string; // ID!
  }
  ComponentSeoSeoInformation: { // root type
    SeoDescription?: string | null; // String
    SeoTitle?: string | null; // String
    id: string; // ID!
  }
  ComponentServicesServicesPreview: { // root type
    id: string; // ID!
  }
  ContentPage: { // root type
    Slug: string; // String!
    Title: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ContentPageEntity: {};
  ContentPageEntityResponse: {};
  ContentPageEntityResponseCollection: {};
  ContentPageRelationResponseCollection: {};
  Error: { // root type
    message?: string | null; // String
  }
  Footer: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  FooterEntity: {};
  FooterEntityResponse: {};
  FooterEntityResponseCollection: {};
  FooterRelationResponseCollection: {};
  HomePage: { // root type
    Title?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  HomePageEntity: {};
  HomePageEntityResponse: {};
  HomePageEntityResponseCollection: {};
  HomePageRelationResponseCollection: {};
  I18NLocale: { // root type
    code?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    name?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  I18NLocaleEntity: {};
  I18NLocaleEntityResponse: {};
  I18NLocaleEntityResponseCollection: {};
  I18NLocaleRelationResponseCollection: {};
  Menu: { // root type
    CodeName: string; // String!
    Name: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  MenuEntity: {};
  MenuEntityResponse: {};
  MenuEntityResponseCollection: {};
  MenuRelationResponseCollection: {};
  Mutation: {};
  Pagination: { // root type
    page: number; // Int!
    pageCount: number; // Int!
    pageSize: number; // Int!
    total: number; // Int!
  }
  Post: { // root type
    Content: string; // String!
    Slug: string; // String!
    Title: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PostEntity: {};
  PostEntityResponse: {};
  PostEntityResponseCollection: {};
  PostRelationResponseCollection: {};
  Query: {};
  ResponseCollectionMeta: {};
  SeoConfiguration: { // root type
    DefaultDescription: string; // String!
    DefaultTitle: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  SeoConfigurationEntity: {};
  SeoConfigurationEntityResponse: {};
  SeoConfigurationEntityResponseCollection: {};
  SeoConfigurationRelationResponseCollection: {};
  Service: { // root type
    Description: string; // String!
    Name: string; // String!
    Preview: string; // String!
    Slug: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ServiceEntity: {};
  ServiceEntityResponse: {};
  ServiceEntityResponseCollection: {};
  ServiceRelationResponseCollection: {};
  ServicesPage: { // root type
    Slug: string; // String!
    Title: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ServicesPageEntity: {};
  ServicesPageEntityResponse: {};
  ServicesPageEntityResponseCollection: {};
  ServicesPageRelationResponseCollection: {};
  Tag: { // root type
    Name: string; // String!
    Slug: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  TagEntity: {};
  TagEntityResponse: {};
  TagEntityResponseCollection: {};
  TagRelationResponseCollection: {};
  UploadFile: { // root type
    alternativeText?: string | null; // String
    caption?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    ext?: string | null; // String
    formats?: NexusGenScalars['JSON'] | null; // JSON
    hash: string; // String!
    height?: number | null; // Int
    mime: string; // String!
    name: string; // String!
    previewUrl?: string | null; // String
    provider: string; // String!
    provider_metadata?: NexusGenScalars['JSON'] | null; // JSON
    size: number; // Float!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    url: string; // String!
    width?: number | null; // Int
  }
  UploadFileEntity: {};
  UploadFileEntityResponse: {};
  UploadFileEntityResponseCollection: {};
  UploadFileRelationResponseCollection: {};
  UsersPermissionsCreateRolePayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsDeleteRolePayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsLoginPayload: { // root type
    jwt?: string | null; // String
    user: NexusGenRootTypes['UsersPermissionsMe']; // UsersPermissionsMe!
  }
  UsersPermissionsMe: { // root type
    blocked?: boolean | null; // Boolean
    confirmed?: boolean | null; // Boolean
    email?: string | null; // String
    id: string; // ID!
    role?: NexusGenRootTypes['UsersPermissionsMeRole'] | null; // UsersPermissionsMeRole
    username: string; // String!
  }
  UsersPermissionsMeRole: { // root type
    description?: string | null; // String
    id: string; // ID!
    name: string; // String!
    type?: string | null; // String
  }
  UsersPermissionsPasswordPayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsPermission: { // root type
    action: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UsersPermissionsPermissionEntity: {};
  UsersPermissionsPermissionEntityResponse: {};
  UsersPermissionsPermissionEntityResponseCollection: {};
  UsersPermissionsPermissionRelationResponseCollection: {};
  UsersPermissionsRole: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    name: string; // String!
    type?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UsersPermissionsRoleEntity: {};
  UsersPermissionsRoleEntityResponse: {};
  UsersPermissionsRoleEntityResponseCollection: {};
  UsersPermissionsRoleRelationResponseCollection: {};
  UsersPermissionsUpdateRolePayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsUser: { // root type
    blocked?: boolean | null; // Boolean
    confirmed?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email: string; // String!
    provider?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    username: string; // String!
  }
  UsersPermissionsUserEntity: {};
  UsersPermissionsUserEntityResponse: {};
  UsersPermissionsUserEntityResponseCollection: {};
  UsersPermissionsUserRelationResponseCollection: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
  GenericMorph: NexusGenRootTypes['BlogPage'] | NexusGenRootTypes['CompanyInfo'] | NexusGenRootTypes['ComponentBlogFeaturedPost'] | NexusGenRootTypes['ComponentBlogPostSelection'] | NexusGenRootTypes['ComponentLayoutButton'] | NexusGenRootTypes['ComponentLayoutFooterColumn'] | NexusGenRootTypes['ComponentLayoutHeroSection'] | NexusGenRootTypes['ComponentLayoutPageInfo'] | NexusGenRootTypes['ComponentSeoSeoInformation'] | NexusGenRootTypes['ComponentServicesServicesPreview'] | NexusGenRootTypes['ContentPage'] | NexusGenRootTypes['Footer'] | NexusGenRootTypes['HomePage'] | NexusGenRootTypes['I18NLocale'] | NexusGenRootTypes['Menu'] | NexusGenRootTypes['Post'] | NexusGenRootTypes['SeoConfiguration'] | NexusGenRootTypes['Service'] | NexusGenRootTypes['ServicesPage'] | NexusGenRootTypes['Tag'] | NexusGenRootTypes['UploadFile'] | NexusGenRootTypes['UsersPermissionsPermission'] | NexusGenRootTypes['UsersPermissionsRole'] | NexusGenRootTypes['UsersPermissionsUser'];
  HomePageBlogSelectionDynamicZone: NexusGenRootTypes['ComponentBlogFeaturedPost'] | NexusGenRootTypes['ComponentBlogPostSelection'] | NexusGenRootTypes['Error'];
}

export type NexusGenRootTypes = NexusGenObjects & NexusGenUnions

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  BlogPage: { // field return type
    ExcludedTags: NexusGenRootTypes['TagRelationResponseCollection'] | null; // TagRelationResponseCollection
    PageInfo: NexusGenRootTypes['ComponentLayoutPageInfo'] | null; // ComponentLayoutPageInfo
    Slug: string | null; // String
    Title: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  BlogPageEntity: { // field return type
    attributes: NexusGenRootTypes['BlogPage'] | null; // BlogPage
    id: string | null; // ID
  }
  BlogPageEntityResponse: { // field return type
    data: NexusGenRootTypes['BlogPageEntity'] | null; // BlogPageEntity
  }
  BlogPageEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['BlogPageEntity'][]; // [BlogPageEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  BlogPageRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['BlogPageEntity'][]; // [BlogPageEntity!]!
  }
  CompanyInfo: { // field return type
    Email: string; // String!
    Logo: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
    Name: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  CompanyInfoEntity: { // field return type
    attributes: NexusGenRootTypes['CompanyInfo'] | null; // CompanyInfo
    id: string | null; // ID
  }
  CompanyInfoEntityResponse: { // field return type
    data: NexusGenRootTypes['CompanyInfoEntity'] | null; // CompanyInfoEntity
  }
  CompanyInfoEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['CompanyInfoEntity'][]; // [CompanyInfoEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  CompanyInfoRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['CompanyInfoEntity'][]; // [CompanyInfoEntity!]!
  }
  ComponentBlogFeaturedPost: { // field return type
    FeaturedPostHeading: string | null; // String
    Post: NexusGenRootTypes['PostEntityResponse'] | null; // PostEntityResponse
    id: string; // ID!
  }
  ComponentBlogPostSelection: { // field return type
    SelectionHeading: string | null; // String
    Tags: NexusGenRootTypes['TagRelationResponseCollection'] | null; // TagRelationResponseCollection
    id: string; // ID!
  }
  ComponentLayoutButton: { // field return type
    Label: string; // String!
    Link: string; // String!
    id: string; // ID!
  }
  ComponentLayoutFooterColumn: { // field return type
    Content: string | null; // String
    FooterLinks: NexusGenRootTypes['MenuEntityResponse'] | null; // MenuEntityResponse
    Heading: string | null; // String
    id: string; // ID!
  }
  ComponentLayoutHeroSection: { // field return type
    Buttons: Array<NexusGenRootTypes['ComponentLayoutButton'] | null> | null; // [ComponentLayoutButton]
    CallToAction: string; // String!
    Images: NexusGenRootTypes['UploadFileRelationResponseCollection']; // UploadFileRelationResponseCollection!
    id: string; // ID!
  }
  ComponentLayoutPageInfo: { // field return type
    Content: string | null; // String
    Cover: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    SeoInformation: NexusGenRootTypes['ComponentSeoSeoInformation'] | null; // ComponentSeoSeoInformation
    id: string; // ID!
  }
  ComponentSeoSeoInformation: { // field return type
    SeoDescription: string | null; // String
    SeoTitle: string | null; // String
    id: string; // ID!
  }
  ComponentServicesServicesPreview: { // field return type
    Services: NexusGenRootTypes['ServiceRelationResponseCollection'] | null; // ServiceRelationResponseCollection
    id: string; // ID!
  }
  ContentPage: { // field return type
    PageInfo: NexusGenRootTypes['ComponentLayoutPageInfo'] | null; // ComponentLayoutPageInfo
    Slug: string; // String!
    Title: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ContentPageEntity: { // field return type
    attributes: NexusGenRootTypes['ContentPage'] | null; // ContentPage
    id: string | null; // ID
  }
  ContentPageEntityResponse: { // field return type
    data: NexusGenRootTypes['ContentPageEntity'] | null; // ContentPageEntity
  }
  ContentPageEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['ContentPageEntity'][]; // [ContentPageEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  ContentPageRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['ContentPageEntity'][]; // [ContentPageEntity!]!
  }
  Error: { // field return type
    code: string; // String!
    message: string | null; // String
  }
  Footer: { // field return type
    FooterColumn: Array<NexusGenRootTypes['ComponentLayoutFooterColumn'] | null> | null; // [ComponentLayoutFooterColumn]
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  FooterEntity: { // field return type
    attributes: NexusGenRootTypes['Footer'] | null; // Footer
    id: string | null; // ID
  }
  FooterEntityResponse: { // field return type
    data: NexusGenRootTypes['FooterEntity'] | null; // FooterEntity
  }
  FooterEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['FooterEntity'][]; // [FooterEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  FooterRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['FooterEntity'][]; // [FooterEntity!]!
  }
  HomePage: { // field return type
    BlogSelection: Array<NexusGenRootTypes['HomePageBlogSelectionDynamicZone'] | null>; // [HomePageBlogSelectionDynamicZone]!
    HomeHero: NexusGenRootTypes['ComponentLayoutHeroSection'] | null; // ComponentLayoutHeroSection
    SeoInformation: NexusGenRootTypes['ComponentSeoSeoInformation'] | null; // ComponentSeoSeoInformation
    ServicesPreview: NexusGenRootTypes['ComponentServicesServicesPreview'] | null; // ComponentServicesServicesPreview
    Title: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  HomePageEntity: { // field return type
    attributes: NexusGenRootTypes['HomePage'] | null; // HomePage
    id: string | null; // ID
  }
  HomePageEntityResponse: { // field return type
    data: NexusGenRootTypes['HomePageEntity'] | null; // HomePageEntity
  }
  HomePageEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['HomePageEntity'][]; // [HomePageEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  HomePageRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['HomePageEntity'][]; // [HomePageEntity!]!
  }
  I18NLocale: { // field return type
    code: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  I18NLocaleEntity: { // field return type
    attributes: NexusGenRootTypes['I18NLocale'] | null; // I18NLocale
    id: string | null; // ID
  }
  I18NLocaleEntityResponse: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'] | null; // I18NLocaleEntity
  }
  I18NLocaleEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'][]; // [I18NLocaleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  I18NLocaleRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'][]; // [I18NLocaleEntity!]!
  }
  Menu: { // field return type
    CodeName: string; // String!
    Links: Array<NexusGenRootTypes['ComponentLayoutButton'] | null> | null; // [ComponentLayoutButton]
    Name: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  MenuEntity: { // field return type
    attributes: NexusGenRootTypes['Menu'] | null; // Menu
    id: string | null; // ID
  }
  MenuEntityResponse: { // field return type
    data: NexusGenRootTypes['MenuEntity'] | null; // MenuEntity
  }
  MenuEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['MenuEntity'][]; // [MenuEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  MenuRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['MenuEntity'][]; // [MenuEntity!]!
  }
  Mutation: { // field return type
    createContentPage: NexusGenRootTypes['ContentPageEntityResponse'] | null; // ContentPageEntityResponse
    createMenu: NexusGenRootTypes['MenuEntityResponse'] | null; // MenuEntityResponse
    createPost: NexusGenRootTypes['PostEntityResponse'] | null; // PostEntityResponse
    createService: NexusGenRootTypes['ServiceEntityResponse'] | null; // ServiceEntityResponse
    createTag: NexusGenRootTypes['TagEntityResponse'] | null; // TagEntityResponse
    createUploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    createUsersPermissionsRole: NexusGenRootTypes['UsersPermissionsCreateRolePayload'] | null; // UsersPermissionsCreateRolePayload
    createUsersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse']; // UsersPermissionsUserEntityResponse!
    deleteBlogPage: NexusGenRootTypes['BlogPageEntityResponse'] | null; // BlogPageEntityResponse
    deleteCompanyInfo: NexusGenRootTypes['CompanyInfoEntityResponse'] | null; // CompanyInfoEntityResponse
    deleteContentPage: NexusGenRootTypes['ContentPageEntityResponse'] | null; // ContentPageEntityResponse
    deleteFooter: NexusGenRootTypes['FooterEntityResponse'] | null; // FooterEntityResponse
    deleteHomePage: NexusGenRootTypes['HomePageEntityResponse'] | null; // HomePageEntityResponse
    deleteMenu: NexusGenRootTypes['MenuEntityResponse'] | null; // MenuEntityResponse
    deletePost: NexusGenRootTypes['PostEntityResponse'] | null; // PostEntityResponse
    deleteSeoConfiguration: NexusGenRootTypes['SeoConfigurationEntityResponse'] | null; // SeoConfigurationEntityResponse
    deleteService: NexusGenRootTypes['ServiceEntityResponse'] | null; // ServiceEntityResponse
    deleteServicesPage: NexusGenRootTypes['ServicesPageEntityResponse'] | null; // ServicesPageEntityResponse
    deleteTag: NexusGenRootTypes['TagEntityResponse'] | null; // TagEntityResponse
    deleteUploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    deleteUsersPermissionsRole: NexusGenRootTypes['UsersPermissionsDeleteRolePayload'] | null; // UsersPermissionsDeleteRolePayload
    deleteUsersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse']; // UsersPermissionsUserEntityResponse!
    emailConfirmation: NexusGenRootTypes['UsersPermissionsLoginPayload'] | null; // UsersPermissionsLoginPayload
    forgotPassword: NexusGenRootTypes['UsersPermissionsPasswordPayload'] | null; // UsersPermissionsPasswordPayload
    login: NexusGenRootTypes['UsersPermissionsLoginPayload']; // UsersPermissionsLoginPayload!
    multipleUpload: Array<NexusGenRootTypes['UploadFileEntityResponse'] | null>; // [UploadFileEntityResponse]!
    register: NexusGenRootTypes['UsersPermissionsLoginPayload']; // UsersPermissionsLoginPayload!
    removeFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    resetPassword: NexusGenRootTypes['UsersPermissionsLoginPayload'] | null; // UsersPermissionsLoginPayload
    updateBlogPage: NexusGenRootTypes['BlogPageEntityResponse'] | null; // BlogPageEntityResponse
    updateCompanyInfo: NexusGenRootTypes['CompanyInfoEntityResponse'] | null; // CompanyInfoEntityResponse
    updateContentPage: NexusGenRootTypes['ContentPageEntityResponse'] | null; // ContentPageEntityResponse
    updateFileInfo: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
    updateFooter: NexusGenRootTypes['FooterEntityResponse'] | null; // FooterEntityResponse
    updateHomePage: NexusGenRootTypes['HomePageEntityResponse'] | null; // HomePageEntityResponse
    updateMenu: NexusGenRootTypes['MenuEntityResponse'] | null; // MenuEntityResponse
    updatePost: NexusGenRootTypes['PostEntityResponse'] | null; // PostEntityResponse
    updateSeoConfiguration: NexusGenRootTypes['SeoConfigurationEntityResponse'] | null; // SeoConfigurationEntityResponse
    updateService: NexusGenRootTypes['ServiceEntityResponse'] | null; // ServiceEntityResponse
    updateServicesPage: NexusGenRootTypes['ServicesPageEntityResponse'] | null; // ServicesPageEntityResponse
    updateTag: NexusGenRootTypes['TagEntityResponse'] | null; // TagEntityResponse
    updateUploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    updateUsersPermissionsRole: NexusGenRootTypes['UsersPermissionsUpdateRolePayload'] | null; // UsersPermissionsUpdateRolePayload
    updateUsersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse']; // UsersPermissionsUserEntityResponse!
    upload: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
  }
  Pagination: { // field return type
    page: number; // Int!
    pageCount: number; // Int!
    pageSize: number; // Int!
    total: number; // Int!
  }
  Post: { // field return type
    Content: string; // String!
    Cover: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    PostSEO: NexusGenRootTypes['ComponentSeoSeoInformation'] | null; // ComponentSeoSeoInformation
    Slug: string; // String!
    Title: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    tags: NexusGenRootTypes['TagRelationResponseCollection'] | null; // TagRelationResponseCollection
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PostEntity: { // field return type
    attributes: NexusGenRootTypes['Post'] | null; // Post
    id: string | null; // ID
  }
  PostEntityResponse: { // field return type
    data: NexusGenRootTypes['PostEntity'] | null; // PostEntity
  }
  PostEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['PostEntity'][]; // [PostEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  PostRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['PostEntity'][]; // [PostEntity!]!
  }
  Query: { // field return type
    blogPage: NexusGenRootTypes['BlogPageEntityResponse'] | null; // BlogPageEntityResponse
    companyInfo: NexusGenRootTypes['CompanyInfoEntityResponse'] | null; // CompanyInfoEntityResponse
    contentPage: NexusGenRootTypes['ContentPageEntityResponse'] | null; // ContentPageEntityResponse
    contentPages: NexusGenRootTypes['ContentPageEntityResponseCollection'] | null; // ContentPageEntityResponseCollection
    footer: NexusGenRootTypes['FooterEntityResponse'] | null; // FooterEntityResponse
    homePage: NexusGenRootTypes['HomePageEntityResponse'] | null; // HomePageEntityResponse
    i18NLocale: NexusGenRootTypes['I18NLocaleEntityResponse'] | null; // I18NLocaleEntityResponse
    i18NLocales: NexusGenRootTypes['I18NLocaleEntityResponseCollection'] | null; // I18NLocaleEntityResponseCollection
    me: NexusGenRootTypes['UsersPermissionsMe'] | null; // UsersPermissionsMe
    menu: NexusGenRootTypes['MenuEntityResponse'] | null; // MenuEntityResponse
    menus: NexusGenRootTypes['MenuEntityResponseCollection'] | null; // MenuEntityResponseCollection
    post: NexusGenRootTypes['PostEntityResponse'] | null; // PostEntityResponse
    posts: NexusGenRootTypes['PostEntityResponseCollection'] | null; // PostEntityResponseCollection
    seoConfiguration: NexusGenRootTypes['SeoConfigurationEntityResponse'] | null; // SeoConfigurationEntityResponse
    service: NexusGenRootTypes['ServiceEntityResponse'] | null; // ServiceEntityResponse
    services: NexusGenRootTypes['ServiceEntityResponseCollection'] | null; // ServiceEntityResponseCollection
    servicesPage: NexusGenRootTypes['ServicesPageEntityResponse'] | null; // ServicesPageEntityResponse
    tag: NexusGenRootTypes['TagEntityResponse'] | null; // TagEntityResponse
    tags: NexusGenRootTypes['TagEntityResponseCollection'] | null; // TagEntityResponseCollection
    uploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    uploadFiles: NexusGenRootTypes['UploadFileEntityResponseCollection'] | null; // UploadFileEntityResponseCollection
    usersPermissionsRole: NexusGenRootTypes['UsersPermissionsRoleEntityResponse'] | null; // UsersPermissionsRoleEntityResponse
    usersPermissionsRoles: NexusGenRootTypes['UsersPermissionsRoleEntityResponseCollection'] | null; // UsersPermissionsRoleEntityResponseCollection
    usersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse'] | null; // UsersPermissionsUserEntityResponse
    usersPermissionsUsers: NexusGenRootTypes['UsersPermissionsUserEntityResponseCollection'] | null; // UsersPermissionsUserEntityResponseCollection
  }
  ResponseCollectionMeta: { // field return type
    pagination: NexusGenRootTypes['Pagination']; // Pagination!
  }
  SeoConfiguration: { // field return type
    DefaultDescription: string; // String!
    DefaultSeoImage: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
    DefaultTitle: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  SeoConfigurationEntity: { // field return type
    attributes: NexusGenRootTypes['SeoConfiguration'] | null; // SeoConfiguration
    id: string | null; // ID
  }
  SeoConfigurationEntityResponse: { // field return type
    data: NexusGenRootTypes['SeoConfigurationEntity'] | null; // SeoConfigurationEntity
  }
  SeoConfigurationEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['SeoConfigurationEntity'][]; // [SeoConfigurationEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  SeoConfigurationRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['SeoConfigurationEntity'][]; // [SeoConfigurationEntity!]!
  }
  Service: { // field return type
    Description: string; // String!
    Image: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    Name: string; // String!
    Preview: string; // String!
    Slug: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ServiceEntity: { // field return type
    attributes: NexusGenRootTypes['Service'] | null; // Service
    id: string | null; // ID
  }
  ServiceEntityResponse: { // field return type
    data: NexusGenRootTypes['ServiceEntity'] | null; // ServiceEntity
  }
  ServiceEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['ServiceEntity'][]; // [ServiceEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  ServiceRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['ServiceEntity'][]; // [ServiceEntity!]!
  }
  ServicesPage: { // field return type
    ExcludedServices: NexusGenRootTypes['ServiceRelationResponseCollection'] | null; // ServiceRelationResponseCollection
    PageInfo: NexusGenRootTypes['ComponentLayoutPageInfo'] | null; // ComponentLayoutPageInfo
    Slug: string; // String!
    Title: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ServicesPageEntity: { // field return type
    attributes: NexusGenRootTypes['ServicesPage'] | null; // ServicesPage
    id: string | null; // ID
  }
  ServicesPageEntityResponse: { // field return type
    data: NexusGenRootTypes['ServicesPageEntity'] | null; // ServicesPageEntity
  }
  ServicesPageEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['ServicesPageEntity'][]; // [ServicesPageEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  ServicesPageRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['ServicesPageEntity'][]; // [ServicesPageEntity!]!
  }
  Tag: { // field return type
    Name: string; // String!
    Slug: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  TagEntity: { // field return type
    attributes: NexusGenRootTypes['Tag'] | null; // Tag
    id: string | null; // ID
  }
  TagEntityResponse: { // field return type
    data: NexusGenRootTypes['TagEntity'] | null; // TagEntity
  }
  TagEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['TagEntity'][]; // [TagEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  TagRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['TagEntity'][]; // [TagEntity!]!
  }
  UploadFile: { // field return type
    alternativeText: string | null; // String
    caption: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    ext: string | null; // String
    formats: NexusGenScalars['JSON'] | null; // JSON
    hash: string; // String!
    height: number | null; // Int
    mime: string; // String!
    name: string; // String!
    previewUrl: string | null; // String
    provider: string; // String!
    provider_metadata: NexusGenScalars['JSON'] | null; // JSON
    related: Array<NexusGenRootTypes['GenericMorph'] | null> | null; // [GenericMorph]
    size: number; // Float!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    url: string; // String!
    width: number | null; // Int
  }
  UploadFileEntity: { // field return type
    attributes: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    id: string | null; // ID
  }
  UploadFileEntityResponse: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'] | null; // UploadFileEntity
  }
  UploadFileEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'][]; // [UploadFileEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UploadFileRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'][]; // [UploadFileEntity!]!
  }
  UsersPermissionsCreateRolePayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsDeleteRolePayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsLoginPayload: { // field return type
    jwt: string | null; // String
    user: NexusGenRootTypes['UsersPermissionsMe']; // UsersPermissionsMe!
  }
  UsersPermissionsMe: { // field return type
    blocked: boolean | null; // Boolean
    confirmed: boolean | null; // Boolean
    email: string | null; // String
    id: string; // ID!
    role: NexusGenRootTypes['UsersPermissionsMeRole'] | null; // UsersPermissionsMeRole
    username: string; // String!
  }
  UsersPermissionsMeRole: { // field return type
    description: string | null; // String
    id: string; // ID!
    name: string; // String!
    type: string | null; // String
  }
  UsersPermissionsPasswordPayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsPermission: { // field return type
    action: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    role: NexusGenRootTypes['UsersPermissionsRoleEntityResponse'] | null; // UsersPermissionsRoleEntityResponse
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UsersPermissionsPermissionEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsPermission'] | null; // UsersPermissionsPermission
    id: string | null; // ID
  }
  UsersPermissionsPermissionEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'] | null; // UsersPermissionsPermissionEntity
  }
  UsersPermissionsPermissionEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'][]; // [UsersPermissionsPermissionEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsPermissionRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'][]; // [UsersPermissionsPermissionEntity!]!
  }
  UsersPermissionsRole: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    name: string; // String!
    permissions: NexusGenRootTypes['UsersPermissionsPermissionRelationResponseCollection'] | null; // UsersPermissionsPermissionRelationResponseCollection
    type: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    users: NexusGenRootTypes['UsersPermissionsUserRelationResponseCollection'] | null; // UsersPermissionsUserRelationResponseCollection
  }
  UsersPermissionsRoleEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsRole'] | null; // UsersPermissionsRole
    id: string | null; // ID
  }
  UsersPermissionsRoleEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'] | null; // UsersPermissionsRoleEntity
  }
  UsersPermissionsRoleEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'][]; // [UsersPermissionsRoleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsRoleRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'][]; // [UsersPermissionsRoleEntity!]!
  }
  UsersPermissionsUpdateRolePayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsUser: { // field return type
    blocked: boolean | null; // Boolean
    confirmed: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    email: string; // String!
    provider: string | null; // String
    role: NexusGenRootTypes['UsersPermissionsRoleEntityResponse'] | null; // UsersPermissionsRoleEntityResponse
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    username: string; // String!
  }
  UsersPermissionsUserEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsUser'] | null; // UsersPermissionsUser
    id: string | null; // ID
  }
  UsersPermissionsUserEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'] | null; // UsersPermissionsUserEntity
  }
  UsersPermissionsUserEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'][]; // [UsersPermissionsUserEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsUserRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'][]; // [UsersPermissionsUserEntity!]!
  }
}

export interface NexusGenFieldTypeNames {
  BlogPage: { // field return type name
    ExcludedTags: 'TagRelationResponseCollection'
    PageInfo: 'ComponentLayoutPageInfo'
    Slug: 'String'
    Title: 'String'
    createdAt: 'DateTime'
    publishedAt: 'DateTime'
    updatedAt: 'DateTime'
  }
  BlogPageEntity: { // field return type name
    attributes: 'BlogPage'
    id: 'ID'
  }
  BlogPageEntityResponse: { // field return type name
    data: 'BlogPageEntity'
  }
  BlogPageEntityResponseCollection: { // field return type name
    data: 'BlogPageEntity'
    meta: 'ResponseCollectionMeta'
  }
  BlogPageRelationResponseCollection: { // field return type name
    data: 'BlogPageEntity'
  }
  CompanyInfo: { // field return type name
    Email: 'String'
    Logo: 'UploadFileEntityResponse'
    Name: 'String'
    createdAt: 'DateTime'
    updatedAt: 'DateTime'
  }
  CompanyInfoEntity: { // field return type name
    attributes: 'CompanyInfo'
    id: 'ID'
  }
  CompanyInfoEntityResponse: { // field return type name
    data: 'CompanyInfoEntity'
  }
  CompanyInfoEntityResponseCollection: { // field return type name
    data: 'CompanyInfoEntity'
    meta: 'ResponseCollectionMeta'
  }
  CompanyInfoRelationResponseCollection: { // field return type name
    data: 'CompanyInfoEntity'
  }
  ComponentBlogFeaturedPost: { // field return type name
    FeaturedPostHeading: 'String'
    Post: 'PostEntityResponse'
    id: 'ID'
  }
  ComponentBlogPostSelection: { // field return type name
    SelectionHeading: 'String'
    Tags: 'TagRelationResponseCollection'
    id: 'ID'
  }
  ComponentLayoutButton: { // field return type name
    Label: 'String'
    Link: 'String'
    id: 'ID'
  }
  ComponentLayoutFooterColumn: { // field return type name
    Content: 'String'
    FooterLinks: 'MenuEntityResponse'
    Heading: 'String'
    id: 'ID'
  }
  ComponentLayoutHeroSection: { // field return type name
    Buttons: 'ComponentLayoutButton'
    CallToAction: 'String'
    Images: 'UploadFileRelationResponseCollection'
    id: 'ID'
  }
  ComponentLayoutPageInfo: { // field return type name
    Content: 'String'
    Cover: 'UploadFileEntityResponse'
    SeoInformation: 'ComponentSeoSeoInformation'
    id: 'ID'
  }
  ComponentSeoSeoInformation: { // field return type name
    SeoDescription: 'String'
    SeoTitle: 'String'
    id: 'ID'
  }
  ComponentServicesServicesPreview: { // field return type name
    Services: 'ServiceRelationResponseCollection'
    id: 'ID'
  }
  ContentPage: { // field return type name
    PageInfo: 'ComponentLayoutPageInfo'
    Slug: 'String'
    Title: 'String'
    createdAt: 'DateTime'
    publishedAt: 'DateTime'
    updatedAt: 'DateTime'
  }
  ContentPageEntity: { // field return type name
    attributes: 'ContentPage'
    id: 'ID'
  }
  ContentPageEntityResponse: { // field return type name
    data: 'ContentPageEntity'
  }
  ContentPageEntityResponseCollection: { // field return type name
    data: 'ContentPageEntity'
    meta: 'ResponseCollectionMeta'
  }
  ContentPageRelationResponseCollection: { // field return type name
    data: 'ContentPageEntity'
  }
  Error: { // field return type name
    code: 'String'
    message: 'String'
  }
  Footer: { // field return type name
    FooterColumn: 'ComponentLayoutFooterColumn'
    createdAt: 'DateTime'
    publishedAt: 'DateTime'
    updatedAt: 'DateTime'
  }
  FooterEntity: { // field return type name
    attributes: 'Footer'
    id: 'ID'
  }
  FooterEntityResponse: { // field return type name
    data: 'FooterEntity'
  }
  FooterEntityResponseCollection: { // field return type name
    data: 'FooterEntity'
    meta: 'ResponseCollectionMeta'
  }
  FooterRelationResponseCollection: { // field return type name
    data: 'FooterEntity'
  }
  HomePage: { // field return type name
    BlogSelection: 'HomePageBlogSelectionDynamicZone'
    HomeHero: 'ComponentLayoutHeroSection'
    SeoInformation: 'ComponentSeoSeoInformation'
    ServicesPreview: 'ComponentServicesServicesPreview'
    Title: 'String'
    createdAt: 'DateTime'
    publishedAt: 'DateTime'
    updatedAt: 'DateTime'
  }
  HomePageEntity: { // field return type name
    attributes: 'HomePage'
    id: 'ID'
  }
  HomePageEntityResponse: { // field return type name
    data: 'HomePageEntity'
  }
  HomePageEntityResponseCollection: { // field return type name
    data: 'HomePageEntity'
    meta: 'ResponseCollectionMeta'
  }
  HomePageRelationResponseCollection: { // field return type name
    data: 'HomePageEntity'
  }
  I18NLocale: { // field return type name
    code: 'String'
    createdAt: 'DateTime'
    name: 'String'
    updatedAt: 'DateTime'
  }
  I18NLocaleEntity: { // field return type name
    attributes: 'I18NLocale'
    id: 'ID'
  }
  I18NLocaleEntityResponse: { // field return type name
    data: 'I18NLocaleEntity'
  }
  I18NLocaleEntityResponseCollection: { // field return type name
    data: 'I18NLocaleEntity'
    meta: 'ResponseCollectionMeta'
  }
  I18NLocaleRelationResponseCollection: { // field return type name
    data: 'I18NLocaleEntity'
  }
  Menu: { // field return type name
    CodeName: 'String'
    Links: 'ComponentLayoutButton'
    Name: 'String'
    createdAt: 'DateTime'
    updatedAt: 'DateTime'
  }
  MenuEntity: { // field return type name
    attributes: 'Menu'
    id: 'ID'
  }
  MenuEntityResponse: { // field return type name
    data: 'MenuEntity'
  }
  MenuEntityResponseCollection: { // field return type name
    data: 'MenuEntity'
    meta: 'ResponseCollectionMeta'
  }
  MenuRelationResponseCollection: { // field return type name
    data: 'MenuEntity'
  }
  Mutation: { // field return type name
    createContentPage: 'ContentPageEntityResponse'
    createMenu: 'MenuEntityResponse'
    createPost: 'PostEntityResponse'
    createService: 'ServiceEntityResponse'
    createTag: 'TagEntityResponse'
    createUploadFile: 'UploadFileEntityResponse'
    createUsersPermissionsRole: 'UsersPermissionsCreateRolePayload'
    createUsersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    deleteBlogPage: 'BlogPageEntityResponse'
    deleteCompanyInfo: 'CompanyInfoEntityResponse'
    deleteContentPage: 'ContentPageEntityResponse'
    deleteFooter: 'FooterEntityResponse'
    deleteHomePage: 'HomePageEntityResponse'
    deleteMenu: 'MenuEntityResponse'
    deletePost: 'PostEntityResponse'
    deleteSeoConfiguration: 'SeoConfigurationEntityResponse'
    deleteService: 'ServiceEntityResponse'
    deleteServicesPage: 'ServicesPageEntityResponse'
    deleteTag: 'TagEntityResponse'
    deleteUploadFile: 'UploadFileEntityResponse'
    deleteUsersPermissionsRole: 'UsersPermissionsDeleteRolePayload'
    deleteUsersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    emailConfirmation: 'UsersPermissionsLoginPayload'
    forgotPassword: 'UsersPermissionsPasswordPayload'
    login: 'UsersPermissionsLoginPayload'
    multipleUpload: 'UploadFileEntityResponse'
    register: 'UsersPermissionsLoginPayload'
    removeFile: 'UploadFileEntityResponse'
    resetPassword: 'UsersPermissionsLoginPayload'
    updateBlogPage: 'BlogPageEntityResponse'
    updateCompanyInfo: 'CompanyInfoEntityResponse'
    updateContentPage: 'ContentPageEntityResponse'
    updateFileInfo: 'UploadFileEntityResponse'
    updateFooter: 'FooterEntityResponse'
    updateHomePage: 'HomePageEntityResponse'
    updateMenu: 'MenuEntityResponse'
    updatePost: 'PostEntityResponse'
    updateSeoConfiguration: 'SeoConfigurationEntityResponse'
    updateService: 'ServiceEntityResponse'
    updateServicesPage: 'ServicesPageEntityResponse'
    updateTag: 'TagEntityResponse'
    updateUploadFile: 'UploadFileEntityResponse'
    updateUsersPermissionsRole: 'UsersPermissionsUpdateRolePayload'
    updateUsersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    upload: 'UploadFileEntityResponse'
  }
  Pagination: { // field return type name
    page: 'Int'
    pageCount: 'Int'
    pageSize: 'Int'
    total: 'Int'
  }
  Post: { // field return type name
    Content: 'String'
    Cover: 'UploadFileEntityResponse'
    PostSEO: 'ComponentSeoSeoInformation'
    Slug: 'String'
    Title: 'String'
    createdAt: 'DateTime'
    publishedAt: 'DateTime'
    tags: 'TagRelationResponseCollection'
    updatedAt: 'DateTime'
  }
  PostEntity: { // field return type name
    attributes: 'Post'
    id: 'ID'
  }
  PostEntityResponse: { // field return type name
    data: 'PostEntity'
  }
  PostEntityResponseCollection: { // field return type name
    data: 'PostEntity'
    meta: 'ResponseCollectionMeta'
  }
  PostRelationResponseCollection: { // field return type name
    data: 'PostEntity'
  }
  Query: { // field return type name
    blogPage: 'BlogPageEntityResponse'
    companyInfo: 'CompanyInfoEntityResponse'
    contentPage: 'ContentPageEntityResponse'
    contentPages: 'ContentPageEntityResponseCollection'
    footer: 'FooterEntityResponse'
    homePage: 'HomePageEntityResponse'
    i18NLocale: 'I18NLocaleEntityResponse'
    i18NLocales: 'I18NLocaleEntityResponseCollection'
    me: 'UsersPermissionsMe'
    menu: 'MenuEntityResponse'
    menus: 'MenuEntityResponseCollection'
    post: 'PostEntityResponse'
    posts: 'PostEntityResponseCollection'
    seoConfiguration: 'SeoConfigurationEntityResponse'
    service: 'ServiceEntityResponse'
    services: 'ServiceEntityResponseCollection'
    servicesPage: 'ServicesPageEntityResponse'
    tag: 'TagEntityResponse'
    tags: 'TagEntityResponseCollection'
    uploadFile: 'UploadFileEntityResponse'
    uploadFiles: 'UploadFileEntityResponseCollection'
    usersPermissionsRole: 'UsersPermissionsRoleEntityResponse'
    usersPermissionsRoles: 'UsersPermissionsRoleEntityResponseCollection'
    usersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    usersPermissionsUsers: 'UsersPermissionsUserEntityResponseCollection'
  }
  ResponseCollectionMeta: { // field return type name
    pagination: 'Pagination'
  }
  SeoConfiguration: { // field return type name
    DefaultDescription: 'String'
    DefaultSeoImage: 'UploadFileEntityResponse'
    DefaultTitle: 'String'
    createdAt: 'DateTime'
    updatedAt: 'DateTime'
  }
  SeoConfigurationEntity: { // field return type name
    attributes: 'SeoConfiguration'
    id: 'ID'
  }
  SeoConfigurationEntityResponse: { // field return type name
    data: 'SeoConfigurationEntity'
  }
  SeoConfigurationEntityResponseCollection: { // field return type name
    data: 'SeoConfigurationEntity'
    meta: 'ResponseCollectionMeta'
  }
  SeoConfigurationRelationResponseCollection: { // field return type name
    data: 'SeoConfigurationEntity'
  }
  Service: { // field return type name
    Description: 'String'
    Image: 'UploadFileEntityResponse'
    Name: 'String'
    Preview: 'String'
    Slug: 'String'
    createdAt: 'DateTime'
    publishedAt: 'DateTime'
    updatedAt: 'DateTime'
  }
  ServiceEntity: { // field return type name
    attributes: 'Service'
    id: 'ID'
  }
  ServiceEntityResponse: { // field return type name
    data: 'ServiceEntity'
  }
  ServiceEntityResponseCollection: { // field return type name
    data: 'ServiceEntity'
    meta: 'ResponseCollectionMeta'
  }
  ServiceRelationResponseCollection: { // field return type name
    data: 'ServiceEntity'
  }
  ServicesPage: { // field return type name
    ExcludedServices: 'ServiceRelationResponseCollection'
    PageInfo: 'ComponentLayoutPageInfo'
    Slug: 'String'
    Title: 'String'
    createdAt: 'DateTime'
    publishedAt: 'DateTime'
    updatedAt: 'DateTime'
  }
  ServicesPageEntity: { // field return type name
    attributes: 'ServicesPage'
    id: 'ID'
  }
  ServicesPageEntityResponse: { // field return type name
    data: 'ServicesPageEntity'
  }
  ServicesPageEntityResponseCollection: { // field return type name
    data: 'ServicesPageEntity'
    meta: 'ResponseCollectionMeta'
  }
  ServicesPageRelationResponseCollection: { // field return type name
    data: 'ServicesPageEntity'
  }
  Tag: { // field return type name
    Name: 'String'
    Slug: 'String'
    createdAt: 'DateTime'
    updatedAt: 'DateTime'
  }
  TagEntity: { // field return type name
    attributes: 'Tag'
    id: 'ID'
  }
  TagEntityResponse: { // field return type name
    data: 'TagEntity'
  }
  TagEntityResponseCollection: { // field return type name
    data: 'TagEntity'
    meta: 'ResponseCollectionMeta'
  }
  TagRelationResponseCollection: { // field return type name
    data: 'TagEntity'
  }
  UploadFile: { // field return type name
    alternativeText: 'String'
    caption: 'String'
    createdAt: 'DateTime'
    ext: 'String'
    formats: 'JSON'
    hash: 'String'
    height: 'Int'
    mime: 'String'
    name: 'String'
    previewUrl: 'String'
    provider: 'String'
    provider_metadata: 'JSON'
    related: 'GenericMorph'
    size: 'Float'
    updatedAt: 'DateTime'
    url: 'String'
    width: 'Int'
  }
  UploadFileEntity: { // field return type name
    attributes: 'UploadFile'
    id: 'ID'
  }
  UploadFileEntityResponse: { // field return type name
    data: 'UploadFileEntity'
  }
  UploadFileEntityResponseCollection: { // field return type name
    data: 'UploadFileEntity'
    meta: 'ResponseCollectionMeta'
  }
  UploadFileRelationResponseCollection: { // field return type name
    data: 'UploadFileEntity'
  }
  UsersPermissionsCreateRolePayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsDeleteRolePayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsLoginPayload: { // field return type name
    jwt: 'String'
    user: 'UsersPermissionsMe'
  }
  UsersPermissionsMe: { // field return type name
    blocked: 'Boolean'
    confirmed: 'Boolean'
    email: 'String'
    id: 'ID'
    role: 'UsersPermissionsMeRole'
    username: 'String'
  }
  UsersPermissionsMeRole: { // field return type name
    description: 'String'
    id: 'ID'
    name: 'String'
    type: 'String'
  }
  UsersPermissionsPasswordPayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsPermission: { // field return type name
    action: 'String'
    createdAt: 'DateTime'
    role: 'UsersPermissionsRoleEntityResponse'
    updatedAt: 'DateTime'
  }
  UsersPermissionsPermissionEntity: { // field return type name
    attributes: 'UsersPermissionsPermission'
    id: 'ID'
  }
  UsersPermissionsPermissionEntityResponse: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
  }
  UsersPermissionsPermissionEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsPermissionRelationResponseCollection: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
  }
  UsersPermissionsRole: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    name: 'String'
    permissions: 'UsersPermissionsPermissionRelationResponseCollection'
    type: 'String'
    updatedAt: 'DateTime'
    users: 'UsersPermissionsUserRelationResponseCollection'
  }
  UsersPermissionsRoleEntity: { // field return type name
    attributes: 'UsersPermissionsRole'
    id: 'ID'
  }
  UsersPermissionsRoleEntityResponse: { // field return type name
    data: 'UsersPermissionsRoleEntity'
  }
  UsersPermissionsRoleEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsRoleEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsRoleRelationResponseCollection: { // field return type name
    data: 'UsersPermissionsRoleEntity'
  }
  UsersPermissionsUpdateRolePayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsUser: { // field return type name
    blocked: 'Boolean'
    confirmed: 'Boolean'
    createdAt: 'DateTime'
    email: 'String'
    provider: 'String'
    role: 'UsersPermissionsRoleEntityResponse'
    updatedAt: 'DateTime'
    username: 'String'
  }
  UsersPermissionsUserEntity: { // field return type name
    attributes: 'UsersPermissionsUser'
    id: 'ID'
  }
  UsersPermissionsUserEntityResponse: { // field return type name
    data: 'UsersPermissionsUserEntity'
  }
  UsersPermissionsUserEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsUserEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsUserRelationResponseCollection: { // field return type name
    data: 'UsersPermissionsUserEntity'
  }
}

export interface NexusGenArgTypes {
  BlogPage: {
    ExcludedTags: { // args
      filters?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  ComponentBlogPostSelection: {
    Tags: { // args
      filters?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  ComponentLayoutHeroSection: {
    Buttons: { // args
      filters?: NexusGenInputs['ComponentLayoutButtonFiltersInput'] | null; // ComponentLayoutButtonFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    Images: { // args
      filters?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  ComponentServicesServicesPreview: {
    Services: { // args
      filters?: NexusGenInputs['ServiceFiltersInput'] | null; // ServiceFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
  }
  Footer: {
    FooterColumn: { // args
      filters?: NexusGenInputs['ComponentLayoutFooterColumnFiltersInput'] | null; // ComponentLayoutFooterColumnFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Menu: {
    Links: { // args
      filters?: NexusGenInputs['ComponentLayoutButtonFiltersInput'] | null; // ComponentLayoutButtonFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Mutation: {
    createContentPage: { // args
      data: NexusGenInputs['ContentPageInput']; // ContentPageInput!
    }
    createMenu: { // args
      data: NexusGenInputs['MenuInput']; // MenuInput!
    }
    createPost: { // args
      data: NexusGenInputs['PostInput']; // PostInput!
    }
    createService: { // args
      data: NexusGenInputs['ServiceInput']; // ServiceInput!
    }
    createTag: { // args
      data: NexusGenInputs['TagInput']; // TagInput!
    }
    createUploadFile: { // args
      data: NexusGenInputs['UploadFileInput']; // UploadFileInput!
    }
    createUsersPermissionsRole: { // args
      data: NexusGenInputs['UsersPermissionsRoleInput']; // UsersPermissionsRoleInput!
    }
    createUsersPermissionsUser: { // args
      data: NexusGenInputs['UsersPermissionsUserInput']; // UsersPermissionsUserInput!
    }
    deleteContentPage: { // args
      id: string; // ID!
    }
    deleteMenu: { // args
      id: string; // ID!
    }
    deletePost: { // args
      id: string; // ID!
    }
    deleteService: { // args
      id: string; // ID!
    }
    deleteTag: { // args
      id: string; // ID!
    }
    deleteUploadFile: { // args
      id: string; // ID!
    }
    deleteUsersPermissionsRole: { // args
      id: string; // ID!
    }
    deleteUsersPermissionsUser: { // args
      id: string; // ID!
    }
    emailConfirmation: { // args
      confirmation: string; // String!
    }
    forgotPassword: { // args
      email: string; // String!
    }
    login: { // args
      input: NexusGenInputs['UsersPermissionsLoginInput']; // UsersPermissionsLoginInput!
    }
    multipleUpload: { // args
      field?: string | null; // String
      files: Array<NexusGenScalars['Upload'] | null>; // [Upload]!
      ref?: string | null; // String
      refId?: string | null; // ID
    }
    register: { // args
      input: NexusGenInputs['UsersPermissionsRegisterInput']; // UsersPermissionsRegisterInput!
    }
    removeFile: { // args
      id: string; // ID!
    }
    resetPassword: { // args
      code: string; // String!
      password: string; // String!
      passwordConfirmation: string; // String!
    }
    updateBlogPage: { // args
      data: NexusGenInputs['BlogPageInput']; // BlogPageInput!
    }
    updateCompanyInfo: { // args
      data: NexusGenInputs['CompanyInfoInput']; // CompanyInfoInput!
    }
    updateContentPage: { // args
      data: NexusGenInputs['ContentPageInput']; // ContentPageInput!
      id: string; // ID!
    }
    updateFileInfo: { // args
      id: string; // ID!
      info?: NexusGenInputs['FileInfoInput'] | null; // FileInfoInput
    }
    updateFooter: { // args
      data: NexusGenInputs['FooterInput']; // FooterInput!
    }
    updateHomePage: { // args
      data: NexusGenInputs['HomePageInput']; // HomePageInput!
    }
    updateMenu: { // args
      data: NexusGenInputs['MenuInput']; // MenuInput!
      id: string; // ID!
    }
    updatePost: { // args
      data: NexusGenInputs['PostInput']; // PostInput!
      id: string; // ID!
    }
    updateSeoConfiguration: { // args
      data: NexusGenInputs['SeoConfigurationInput']; // SeoConfigurationInput!
    }
    updateService: { // args
      data: NexusGenInputs['ServiceInput']; // ServiceInput!
      id: string; // ID!
    }
    updateServicesPage: { // args
      data: NexusGenInputs['ServicesPageInput']; // ServicesPageInput!
    }
    updateTag: { // args
      data: NexusGenInputs['TagInput']; // TagInput!
      id: string; // ID!
    }
    updateUploadFile: { // args
      data: NexusGenInputs['UploadFileInput']; // UploadFileInput!
      id: string; // ID!
    }
    updateUsersPermissionsRole: { // args
      data: NexusGenInputs['UsersPermissionsRoleInput']; // UsersPermissionsRoleInput!
      id: string; // ID!
    }
    updateUsersPermissionsUser: { // args
      data: NexusGenInputs['UsersPermissionsUserInput']; // UsersPermissionsUserInput!
      id: string; // ID!
    }
    upload: { // args
      field?: string | null; // String
      file: NexusGenScalars['Upload']; // Upload!
      info?: NexusGenInputs['FileInfoInput'] | null; // FileInfoInput
      ref?: string | null; // String
      refId?: string | null; // ID
    }
  }
  Post: {
    tags: { // args
      filters?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Query: {
    blogPage: { // args
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
    }
    contentPage: { // args
      id?: string | null; // ID
    }
    contentPages: { // args
      filters?: NexusGenInputs['ContentPageFiltersInput'] | null; // ContentPageFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    footer: { // args
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
    }
    homePage: { // args
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
    }
    i18NLocale: { // args
      id?: string | null; // ID
    }
    i18NLocales: { // args
      filters?: NexusGenInputs['I18NLocaleFiltersInput'] | null; // I18NLocaleFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    menu: { // args
      id?: string | null; // ID
    }
    menus: { // args
      filters?: NexusGenInputs['MenuFiltersInput'] | null; // MenuFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    post: { // args
      id?: string | null; // ID
    }
    posts: { // args
      filters?: NexusGenInputs['PostFiltersInput'] | null; // PostFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    service: { // args
      id?: string | null; // ID
    }
    services: { // args
      filters?: NexusGenInputs['ServiceFiltersInput'] | null; // ServiceFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    servicesPage: { // args
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
    }
    tag: { // args
      id?: string | null; // ID
    }
    tags: { // args
      filters?: NexusGenInputs['TagFiltersInput'] | null; // TagFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    uploadFile: { // args
      id?: string | null; // ID
    }
    uploadFiles: { // args
      filters?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    usersPermissionsRole: { // args
      id?: string | null; // ID
    }
    usersPermissionsRoles: { // args
      filters?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    usersPermissionsUser: { // args
      id?: string | null; // ID
    }
    usersPermissionsUsers: { // args
      filters?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  ServicesPage: {
    ExcludedServices: { // args
      filters?: NexusGenInputs['ServiceFiltersInput'] | null; // ServiceFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
  }
  UsersPermissionsRole: {
    permissions: { // args
      filters?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    users: { // args
      filters?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  GenericMorph: "BlogPage" | "CompanyInfo" | "ComponentBlogFeaturedPost" | "ComponentBlogPostSelection" | "ComponentLayoutButton" | "ComponentLayoutFooterColumn" | "ComponentLayoutHeroSection" | "ComponentLayoutPageInfo" | "ComponentSeoSeoInformation" | "ComponentServicesServicesPreview" | "ContentPage" | "Footer" | "HomePage" | "I18NLocale" | "Menu" | "Post" | "SeoConfiguration" | "Service" | "ServicesPage" | "Tag" | "UploadFile" | "UsersPermissionsPermission" | "UsersPermissionsRole" | "UsersPermissionsUser"
  HomePageBlogSelectionDynamicZone: "ComponentBlogFeaturedPost" | "ComponentBlogPostSelection" | "Error"
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = keyof NexusGenUnions;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "GenericMorph" | "HomePageBlogSelectionDynamicZone";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}